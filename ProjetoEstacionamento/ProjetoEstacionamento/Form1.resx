<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        li3/Ab8Qx2vaO+LAAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pBImageLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxMAAAsTAQCanBgAABGISURBVHhe7VsJdBTVmgZmn3kzZ/Zz5sybeWdmfBI66fRS
        Se/7vlcv6SVJZyNkXwkkIZGgYRNwQVAWkUV8CMiiIooisqgEBOGJiiwKqChJIAGRNySEkPxzb6U6092p
        7izkMW/O4TvnI32r7v3r/l/d7b+3mPAQD/EQMSFLYf+niDtFNxyFvMQpKPvEgVKjh4z7yD8JeUnJsuSE
        R02PPPJn9OXRYqKI8+t/FSdP4Yl5U36lVCr/mL4+JkxUq+W7nVnZV/Ma517Pa5wXl978wmtqleyYUvmr
        P6fLDwuc16oWNzkN8ovFWa62+fXFHY0VOe0ZTn2r0yhrUQrYIjprXKSmJvyDRcNdYzdyLhflC9vqa6Ud
        pUWidqeZe8Wi5+ySJz/6H3TWkUNGJDmz65puLWm5ACNlyZKVd9RKUQNtIi6E3Cm/JvWSi9vXLOruunwU
        7rYej+Dlz/bAjMJAp10vfcnrnfBHdLEhUEsSDaSZ27p1u6X3q0sBOPNtJPfsI8Hv5l81ajhldJGRQa2U
        P127fiejo7H4xFstoNeq3qFNxIQ8JfHfPCblj9+dfBs6zu2H0x9ti+C5Izvh5oWPKCE2Lm++7dBLN9NF
        I6AUJqoyfUTHia+8QxwP5+kLAagoE/9kUidX0EWHB2r+z9W9/Cajo7H4xO4joNWr36NNxIRDK/3s66Nv
        UA4umzsDMp1GKEgnB1mY7gS/XQsvLKyj8syrLfxJK+R56OIUkpOT/8pu4P544sv4zp8654cNL5vg42Me
        CHiIqyIe6xHaRHz8vgRAg6ruycbSG6GmvrR5OtQW58CTDVVQnZ8OpdlemF1VSKXzvDY4+cEmuPHNIXDq
        Zd/QJigY1ezml9YZepicDvHY52mQkSaEwqADMr1CeG8/CXYdZw9tIj5+XwK4jfLXz7bspJyPFiCA3vqh
        N14En1VNpadPy4R1zzRR+epLs9rpmYaCzcA5//nXPvjkszRYulQHH37ijnD+I5T2kQKYVZYLlVP9UFEi
        p667bbwfWSzWn9JmYmPMAuhU79MmGOEyys+HnI8WwG1UQmNlHmS5zVS6PNcHO9ctpvJtW7uoV0qwM2gz
        E9NIXit2qBI5Vhx0g9chhJNnBrrDXvSmPTYhPFYxDUqySSgrlMIXX/upe1Vl4nYJe/Jk2k5sqJSSbWMS
        QK34nDbBCI9FeSmWAE3VhVSlF6LfsyunoRahg6tn9lP59m1bAVoZMR3bULJYv8j0E23YoWfR2y/JIqGm
        IAMqy2Tw+i47eKwieHx6EeQHzDCrTgWnLw44j9nUpOiU8BLEVGXiQSNNPWQxacFhN4PFrIfcLH9M2qxG
        cNjM6K8B1ArxJdoEI9Ccf+7Oj58wCpDjMaO3b4Ig4vSCdPjmkzcH821evaBHzGV5aTMT0uwDLQA7l50u
        gobyfMjx6cFrk0LzzBIIejSwaJFu0PEQy0vE7SMaCDUSfstjlQXUW2jZvW6wIkw8c3gHNWrPm1kGGhHv
        PG2CEaRetvHUgS2DZcMFyHQZIuyGszzP2x6+oLEZuF+GmvzhTz3UW59fV4FmjDLwk3JY/aJpiPOYpIX7
        Q7x1BQWNiBDoZSm3rRoxbF870Ae//+07cGTPhohKffzWWrjyxV7q975tK8GmkYBWyu9SEGw2bWoIRByW
        oKE8uyNkYyQCtJ1+H88Cp2kTFAxKdvWyZdrbIcc2bDSjlyCjhNjymnWI45g7d9n6bVrOFtpEbKBmenrN
        kgbYv3PVYCVa3t4Aa55qjKjY8gUzqWkqlH53y3Pw8nNzwGWQn6BNMYLUyQ4c3/tKHy7zPLLhRaN+Nmr+
        HrMywj5mz5VjUD3N36kUclR0cQp4JLfpORdbTngGHcTT3MfHI2eDED8760MzALdNTiT8C20iNpwmxcmt
        qxfAay8uhJ7vj0D37o3QfeC1IZXDvLNvC3S//Qrc/eEorEfO73hpESABD9OmGCFjs/8OdYWLpw5u6f/d
        d4ep1oV57ewHkbbRWLGooeymQydeTBeNgJQzJdFt5bYfDhOBib8944PcjJROnSLZTReND7xOd+gkJ4oy
        ybs9lz6Gri2rkJMbIyoXYteb66Fr24uUULlp5rsOveQojsRoUzEhTk7+Z4dWcnLZvBk38XI43CZ+6yf2
        berP8ZiuOtTiWXQRRiiIyWyrjnPp+RW6LrzqC3ccL4FfedXcS5q4V3TyJCtdZOTA/S40DYUqFl7RcLZ+
        uRdQ0z5FFx0pJurERDpaG5xAg+iVkqCrLc9naXWbFN+TaP0/EiExcHcwqth1Vj3nbJqD15qXndrqd/Lb
        cBcxa5KfVXI4f0tnHR00Ql5g+bwZP4ecXNJUAQd2rqZ+73l1Gax4cmCtjvnUnMqbamHsJqaRJQWl3EQO
        nWQE7hqjCadjYBIOjwmC+BM6fV+YZNdKzlxG/RM72Xn+IJpqitHKywnPPF4Ft749TF3HUR3qMniUZtwQ
        wW8IvYmvrdrkFpQc86ZJLOAuq05hFzqFKZtcopS9pIj4MBZtqcT+Ue0P4LeGFijXmGJ2zNuXj6AR3NgR
        6+2qBElWq5ZzZu16Y/eTC1W3rBrOPkXKFB59eyKuPP17tJhkSOHkkSL+uWq1un2bN7P3ZG4pXCiYDleK
        ayN4xpMHp53ZFLfbPN1STmLEjDIsrEphSW1J8Eb3D/+7gsPE6ZmlwRsWlaCIzjoEBnmyx6LlnNv+hrVv
        1Wp9lwW1BJUwWYjviZMTktSixOEXJlHAa3m7iH9mud35c3txHfxc3hiXX7lz4QtHkOIuu3f0AmCYVcIa
        p0HavW/HSsr5vWhtjgarLqtSVE1niQnct02q5E7UDQ6G79NZ1Mnb87MF3VoJq4a+NCyMBJsMSIVXz06r
        YnSWifcjwKSUxMRUSQonqFZJWy0qYe+MosweFLb2zijO6LGoRb0alfSyWJgYELITCLoMI3QS9lwRkcDH
        vwVs9i+RGK/Nfkxx48sLfvB7+J0aKatMJPrlX1CZY0CbmmzKVUiuXS2pH+LktdJ62JWeA/NcPqh2kFBp
        tw/yKYcbltoHWKLT35OxWem0ydhQpHBe0oj59xx6RZ9azIPyZ9f0kw5Tz57Ny3txC9i5bkmv2+XoKV64
        9B7K12/Xy/vQ315ZCvtp2kQ0JuF/cLOXpyZ24DcfitLwlpZdz7mjFCQeo3IyAIuWJk5tjW7yNxFf9gfB
        rVVDyewFgCPY5neOw4IPPh/k9B0fQ+W2QxQLFq/qRy0gfquVCzmb3WZ1/7y6cmqNnp/pBpVM3Nf0+kGw
        62T38FRoN8h657zxIbou6ivM8lL5cDCEhOiXp3Keo00NwqTirNKJk/Lo5ESjMrmpvlZ2He/aeOy8a2ih
        UoyvD9weCruQ99GJvNL+cOdvlDVAjc0OBTWzYNFH52HJkYuMrEYClG89SLHo2XXxBUBT1i+0EqJvfv2A
        85g4RifdZL/V5eotXfwCSPksqFq+AcwOe6+DdFBxfCjv3NpSwC0HmaLeOIaYSEpwWbltaMV2WUk8+o/0
        5Qko/WEayftZzk/W0JcYoUDx+0ydpjPcecwFrjQobV7C6HQ4RyWAjPdo0GvT94ccCtFq1gOZld2jU4lg
        8zYLaBQi8OYX37Wh69F5SYOyT0IkqrE9pSjxGY0kqfvQUTe89a69Tytl31IQidn4Hvqr1svYn+Lf8eAQ
        Ei2n8ysjnD81tRyNHR5YjDdjGJwO56gEwDezvHZKALyrUjU1nXIq0+eEhs3vgtenh+NfpIE3YKL6W07A
        Rd0vy/FD84xS6refNPWJ2QnUQCMQPPI3JjV72Zw5ilt52YJO1PTnhw12k4bbnsInUyVKRXu485jVdhJm
        7zjA6HA0xyxAXUkuZLktlFPTC4KQVz8bXG4NOEx8JIAFsqtmQG3JQCyf4TBQXSVagBAMCvYlvTLxCToZ
        ASnB+neFgN2oE/O3asW8Y1oxcUEj4h3Ha3hSyN/ckl0U0fe/KaiGoM/P6CwTx0WABfUVYCet4PPrAZ/A
        +AJ4C8wIC2dVjkgA3M+ZYnHcAvTSlNaKvEB/Y3k+NZBiG3k++20Zl5WeLhW1hTuPOR/1ferQhsFZJo6L
        AJge0gLp6Spq6kpLU4HPbR+8N5wAsaAV89eGdoTCOc1PdmsI9o43/cG74c7jadBntY6o74c4bgIUZ/kg
        Jziwv+51y6A8b2B8wBy7ANzFaJy5F7ITIhbAlMq9fh1NdeECrPFmQNXTqxgdjcVxE+CJmmJq/x0LQJoE
        0DxzYNDDHKsAIhbr79Ui3vkMh/F6abb3Hh5THkfPyXJZ7jQZjd3hzuN53280xJ3zmThuAmA6jUJqFnCZ
        xRHXxyoABg6G0EAok/FZBRoxsVInSTloEPP/+/vimoi3/27GVChpbGZ0Mh7HVYCpfjM0zpLDtAxHxPX7
        ESAack6CYZ7Zcj3cecxN/iyoWLKC0cl4HFcB6ktz0UowERoqpkZcv18B8FchZgG3kRQSZ32S1HY81UUL
        gIOgOtIJ2TZbBGsyc+DDlVspbmp+Zsj9So8XpqcFKAaMhj4Jh5VLP3YohhMAT3tugzLiGub9CIA3SO1C
        /rnNnvRuHNVFO36/HFU4LOElPqaXpYLXogGnXg5GuQC8Vv2wxGVcRiVVTichQMhjhQKfYeEQ8E4ez40M
        dMaToxJAmTJF91hV3u1P3/8NbF+7COwWw92q51+GcBqtpog0psOo6d29aSngcjUF/p+H2x8IQcJJVM8z
        mW8wVXy8OMoWkJQyv764E8f8h99eDx6/tyt6UHH4fRFpTI/L1vX5wYEzv7rS4MgOIBEcAmLF4exCxoqP
        F0clAJ6SHDrpkVll2e1Og7zdV1h2I9pZJgFcGcFOj0nRXluS2U7qZPuQqRHt/rrFxK4zUZFeOH8qb4Df
        BLKgzG6HKocTdqbnUpsgTHljcSxbYpPwbq2EP0WeWVXbGe0skwDeguJ2NLpyURj8X6j8iLe+XaKU3bH2
        935CC58SiwXK5z4N8/edgrnvnYDi+sehweFizB+LYxGAAj7JHZUAI/nyIgrxBHgtkAOlc54c8qxp5TWw
        PziNsQzmAXSvBq0YczQKyEWcqddDvUFHMUMu6ZNyWTn04+Pj/1qAmU4nPPH20SHPmrXpHSoiZCqzAc31
        2RYdtZcRmqLLc9KgJNNFscDviL8QCgcKR1m5s5qvRlfgQQnQ5E6Dpp2HhjxrJgqFn3J7h+S/XDQDAhr5
        YIh+3wJgLG65+FV0BR6UAAeyCmBqUXnEc3AYHAxkwqm88iH5P8jMh2I/GeH8/2sBMJ9BTTonJw9q1myF
        6Ss3QYbPD+vR2MCU95OcYij02MZPAHyK07z35LloZx+kAJgnckthudsPqxC/zK9gzIPZWToL0lVSaJ5R
        Mj4C4EVRsKq2I9rZ8RTAKUzZiA81mRwaC7FYASRCccBJ7WPWFAaRAD4oz06jGCSNIxfgQcwCaoKVscaZ
        dpvJmbESb5vtzZgKa9BMsdrlhd3OALxHplOcrzP0SHgsB/34+HgQAuAw2CEkvsMjOJMz48E/6IUQhpKf
        IPKJBW1fTB06so8H/+AFwKA+zBLyD6VLhK0ztJrbdTpdTzTrtbo7jXpDZ4NO3zEarjHZb20wkb/DrJYr
        foeX+PRj4wML4MnNv1m5bB1UPrd2kHqjLiJd9cJGINMzrt+PACHgLqERcq/MLM6GaDqNypsSgk3i06L7
        IXrM4LllXOCDTJVc/KpOQvRkOAyDVAjY/eFppZDbo1ZKV0gmT/5ruuh9QSclvg2fxkJEz+rAMxOd7cEA
        x/Vuk6o9vCIGWUpvRFqR2kpnHxdopcSlcPsh+u26jtBHFg8MBEH8pVEuaMOfsONK4KNwrYTfFfp2AB+j
        a8X8uF+IjxZaMe9w+JE7Jl7fG2SCtvFqZaOCRsirNykE7V6Ltl0n5n0vJ5KK8Hmez6pr10lSWrUCLkln
        HRfgsQSJ/F0GabiW47Vdz3JbrpvkgnaVmFtJZ3nwwCe1+POW0AeIuGWIiMls/JfKMM7AgyEehPF/ysTT
        VviHFQ/xEA8xjpgw4X8AMwyu5pdjXfAAAAAASUVORK5CYII=
</value>
  </data>
</root>